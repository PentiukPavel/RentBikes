name: Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black
          pip install -r ./requirements.txt
      - name: Test with black
        run: python -m black --diff --check .
      - name: Test with django tests
        run: |
          cd src
          python manage.py test

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Generate .env
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_DEBUG: False
          envkey_PROD_DB: True
          envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          envkey_ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
          envkey_CSRF_TRUSTED_ORIGINS: ${{ secrets.CSRF_TRUSTED_ORIGINS }}
          envkey_DB_NAME: ${{ secrets.DB_NAME }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_DB_PORT: ${{ secrets.DB_PORT }}
          envkey_DB_HOST: ${{ secrets.DB_HOST }}
          envkey_DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          envkey_REDDIS_HOST: ${{ secrets.REDDIS_HOST }}
          envkey_REDDIS_PORT: ${{ secrets.REDDIS_PORT }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          build-args: ENV_FILE=.env
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/rent_bike:latest
      - name: Copy .env file to server using SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_LOGIN }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: ".env"
          target: ${{ secrets.TARGET_SERVER_PATH }}
  deploy:
    name: Deploy from image in Docker Hub
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_LOGIN }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd ${{ secrets.TARGET_SERVER_PATH }}
            docker compose exec -T backend python3 manage.py dumpdata --indent 2 --exclude admin.logentry --exclude sessions.session > dump_$(date +%Y%m%d_%H%M).json
            docker compose stop
            docker compose rm -f backend
            docker compose rm -f celery
            docker rmi ${{ secrets.DOCKER_HUB_USERNAME }}/rent_bike
            docker compose up -d
            docker compose exec -T backend python manage.py migrate
